version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: pomodoro_db_prod
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: pomodoro_go
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data_prod:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u${DB_USER}",
          "-p${DB_PASSWORD}",
        ]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s
    networks:
      - pomodoro-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: pomodoro_redis_prod
    volumes:
      - redis_data_prod:/data
    networks:
      - pomodoro-network
    restart: unless-stopped

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: pomodoro_backend_prod
    environment:
      - PORT=8000
      - DB=${DB_USER}:${DB_PASSWORD}@tcp(db:3306)/pomodoro_go?charset=utf8mb4&parseTime=True&loc=Local
      - SECRET=${SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - REDIS_ADDR=redis:6379
      - REDIS_PASS=${REDIS_PASS}
      - EMAIL_PASS=${EMAIL_PASS}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_REDIRECT_URL=${GITHUB_REDIRECT_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - pomodoro-network
    restart: unless-stopped

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: pomodoro_frontend_prod
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_LOCAL_STORAGE_KEY=widgetPosition
      - NEXT_PUBLIC_LOCAL_STORAGE_KEY_BG=wrksFeatures
      - NEXT_PUBLIC_LOCAL_STORAGE_KEY_MEDIA=savedPlaylist
      - NEXT_PUBLIC_LOCAL_STORAGE_KEY_OPACITY=widgetOpacity
      - NEXT_PUBLIC_START_PAUSE_AUDIO=${NEXT_PUBLIC_START_PAUSE_AUDIO}
      - NEXT_PUBLIC_RAIN_AUDIO=${NEXT_PUBLIC_RAIN_AUDIO}
      - NEXT_PUBLIC_CLICK_AUDIO=${NEXT_PUBLIC_CLICK_AUDIO}
      - NEXT_PUBLIC_TWINKLE_AUDIO=${NEXT_PUBLIC_TWINKLE_AUDIO}
      - NEXT_PUBLIC_ALARM_AUDIO=${NEXT_PUBLIC_ALARM_AUDIO}
      - NEXT_PUBLIC_TOKYO_PREVIEW=${NEXT_PUBLIC_TOKYO_PREVIEW}
      - NEXT_PUBLIC_FOREST_PREVIEW=${NEXT_PUBLIC_FOREST_PREVIEW}
      - NEXT_PUBLIC_SWISS_PREVIEW=${NEXT_PUBLIC_SWISS_PREVIEW}
      - NEXT_PUBLIC_SPACE_PREVIEW=${NEXT_PUBLIC_SPACE_PREVIEW}
      - NEXT_PUBLIC_TOKYO_SKY_PREVIEW=${NEXT_PUBLIC_TOKYO_SKY_PREVIEW}
      - NEXT_PUBLIC_SHIBUYA_PREVIEW=${NEXT_PUBLIC_SHIBUYA_PREVIEW}
    depends_on:
      - backend
    networks:
      - pomodoro-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: pomodoro_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - pomodoro-network
    restart: unless-stopped

volumes:
  db_data_prod:
  redis_data_prod:

networks:
  pomodoro-network:
    driver: bridge
